class Solution {
  public:
    int LIS(vector<int>& v)
    {
        if(v.size()==0)
        {
            return 0;
        }
        vector<int>tail(v.size(),0);
        tail[0]=v[0];
        int length=1;
        for(int i=1;i<v.size();i++)
        {
            auto b=tail.begin();
            auto e= tail.begin()+length;
            auto it=lower_bound(b,e,v[i]);
            
            if(it==tail.begin()+length)
            {
                tail[length++]=v[i];
            }else{
                *it=v[i];
            }
        }
        return length;
    }
    int minInsAndDel(int A[], int B[], int N, int M) {
        // code here
        unordered_map<int,int>mp;
        for(int i=0;i<M;i++)
        {
            mp.insert({B[i],i});
        }
        
        vector<int>v;
        
        for(int i=0;i<N;i++)
        {
            if(mp.find(A[i])!=mp.end())
            {
                v.push_back(A[i]);
            }
        }
        
        return (N+M-(2*LIS(v)));
    }
};
