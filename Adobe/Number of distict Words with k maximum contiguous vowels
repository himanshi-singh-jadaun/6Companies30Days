class Solution
{
  public:
  long long int power(long long int x, long long int y, long long int p)
  {
      long long int res=1ll;
      x=x%p;
      if(x==0)
      {
          return x;
      }
      while(y>0)
      {
          if(y&1)
          {
              res=(res*x)%p;
          }
          y=y>>1;
          x=(x*x)%p;
      }
      return res;
  }
    int kvowelwords(int N, int K) {
        // Write Your Code here
        long long int dp[N+1][K+1]={0};
        long long int sum=1;
        long long int i,j;
        long long int mod=1000000007;
        for(int i=1;i<=N;i++)
        {
            dp[i][0]=sum*21;
            dp[i][0]%=mod;
            sum=dp[i][0];
            for(int j=1;j<=K;j++)
            {
                if(j>i)
                {
                    dp[i][j]=0;
                }
                else if(i==j)
                {
                    dp[i][j]=power(5ll ,i,mod);
                }else {
                    dp[i][j]=dp[i-1][j-1]*5;
                }
                dp[i][j]%=mod;
                sum+=dp[i][j];
                sum%=mod;
            }
        }
        return sum;
        
    }
};
