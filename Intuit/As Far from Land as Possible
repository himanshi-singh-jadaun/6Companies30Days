class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
        queue<pair<int,int>>q;
        int n=grid.size();
        int m=grid[0].size();
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    q.push({i,j});
                }
            }
        }
        if(q.size()==0 || q.size()==n*m){
            return -1;
        }
 
        
        int l=-1;
        vector<vector<int>> dir={{-1,0},{0,-1},{1,0},{0,1}};
        while(q.size()>0){
            l++;
            int size=q.size();
            while(size--){
                auto cur=q.front();
                q.pop();
                for(int i=0;i<4;i++){
                    int x=cur.first+dir[i][0];
                    int y=cur.second+dir[i][1];
                    
                    if(x>=0 && y>=0 && x<n && y<m && grid[x][y]==0){
                        q.push({x,y});
                        grid[x][y]=1;
                    }
                }
            }
        }
        return l;
    }
};
