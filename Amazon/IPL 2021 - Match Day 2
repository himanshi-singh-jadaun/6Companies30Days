
 vector<int> max_of_subarrays(vector<int> arr, int n, int k) {
        // your code here
        priority_queue< int> heap, drop;
        for(int i = 0 ; i<k ; i++)
        {
            heap.push(arr[i]);
            
        }
        vector<int> v ;
        v.push_back(heap.top());
        for(int i =k ; i<n; i++)
        {
            if(arr[i-k]==heap.top())
            {
                heap.pop();
            }else{
                drop.push(arr[i-k]);
            }
            
            while(!drop.empty() && drop.top()==heap.top())
            {
                heap.pop();
                drop.pop();
            }
            heap.push(arr[i]);
            v.push_back(heap.top());
        }
        return v;
    }
