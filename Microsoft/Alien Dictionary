class Solution{
    public:
    void dfs(int node, vector<int>&vis, vector<vector<int>>&g, string &ans)
    {
        vis[node]=1;
        for(auto x:g[node])
        {
            if(vis[x]==0)
            {
                dfs(x,vis,g,ans);
            }
        }
        char ch=node+'a';
        ans=ch+ans;
    }
    string findOrder(string dict[], int N, int K) {
        int n=N;
        int k=K;
        vector<vector<int>>g(k);
        vector<int>vis(k,0);
        string ans="";
        for(int i=0;i<n-1;i++)
        {
            string s1=dict[i];
            string s2=dict[i+1];
            
            for(int j=0;j<min(s1.length(),s2.length());j++)
            {
                if(s1[j]!=s2[j])
                {
                    g[s1[j]-'a'].push_back(s2[j]-'a');
                    break;
                }
            }
        }
        for(int i=0;i<k;i++)
        {
            if(vis[i]==0)
            {
                dfs(i,vis,g,ans);
            }
        }
       return ans;
    }
};
